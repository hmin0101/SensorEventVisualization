<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>MultiScreen</title>

    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" href="/font-awesome/css/font-awesome.css">

    <link rel="stylesheet" href="/stylesheets/animate.css">
    <link rel="stylesheet" href="/stylesheets/style.css">

    <link rel="stylesheet" href="/stylesheets/toastr-2.1.3.min.css">

    <style>
        .flex {
            display: flex;
        }
        .flex-item-20 {
            flex: 20%;
            max-width: 20%;
        }
        .flex-item-25 {
            flex: 25%;
            max-width: 25%;
        }
        .flex-item-30 {
            flex: 30%;
            max-width: 30%;
        }
        .flex-item-40 {
            flex: 40%;
            max-width: 40%;
        }
        .flex-item-50 {
            flex: 50%;
            max-width: 50%;
        }
        .flex-item-60 {
            flex: 60%;
            max-width: 60%;
        }
        .flex-item-75 {
            flex: 75%;
            max-width: 75%;
        }
        .flex .input-group {
            display: block;
            width: 100%;
        }
        .flex > .flex-item-20,
        .flex > .flex-item-25,
        .flex > .flex-item-50,
        .flex > .flex-item-75 {
            margin-left: 10px;
            margin-right: 10px;
        }
        .flex > .flex-item-20:first-child,
        .flex > .flex-item-25:first-child,
        .flex > .flex-item-50:first-child,
        .flex > .flex-item-75:first-child {
            margin-left: 0;
            margin-right: 10px;
        }
        .flex > .flex-item-20:last-child,
        .flex > .flex-item-25:last-child,
        .flex > .flex-item-50:last-child,
        .flex > .flex-item-75:last-child {
            margin-left: 10px;
            margin-right: 0;
        }

        .form-subject {
            display: block;
            margin-bottom: 4px;
            font-size: 10px;
            font-weight: 100;
        }
        .form-control {
            font-size: 12px;
        }

        .form-list {
            padding: 10px 20px 0 20px;
        }
        #device-list {
            display: flex;
            padding-bottom: 10px;
            flex-wrap: nowrap;
            overflow-x: auto;
        }
        #device-list .list-item {
            flex: 0 0 auto;
            margin: 0 5px;
            padding: 3px 10px;
            border: 1px solid #e7eaec;
            border-radius: 3px;
            cursor: pointer;
        }
        #device-list .list-item:first-child {
            margin-left: 0;
        }
        #device-list .list-item:last-child {
            margin-right: 0;
        }
        #device-list::-webkit-scrollbar {
            height: 5px;
            background-color: #e7eaec;
        }
        #device-list::-webkit-scrollbar-thumb {
            border-radius: 3px;
            background-color: #1AB394;
        }

        .arrange-area {
            flex-wrap: wrap;
            padding: 10px 20px 20px 20px;
        }
        .arrange-area .form-group:last-child {
            margin-bottom: 0;
        }
        .arrange-area .arrange-row {
            display: flex;
            padding: 15px 10px;
            margin-top: 5px;
            border: 1px solid #e7eaec;
            border-radius: 3px;
        }
        .arrange-area .arrange-row:first-child {
            margin-top: 0;
        }
        .arrange-area .arrange-row:last-child {
            margin-bottom: 0;
        }
        .arrange-row .sub-item {
            /*border: 1px solid #e7eaec;*/
            position: relative;
            flex: 1;
            max-width: 10%;
            margin: 0 10px;
            padding: 13px;
            text-align: center;
            box-shadow: 0 1px 1px rgba(60, 60, 60, 0.3), 0 1px 2px rgba(60, 60, 60, 0.22);
        }
        .sub-item .device-name {
            margin: 0 0 10px 0;
            font-size: 17px;
            font-weight: 400;
        }
        .sub-item .input-group {
            display: inline;
        }
        .sub-item .dropdown-toggle {
            font-size: 9px;
            font-weight: 100;
            padding: 3px 6px;
        }
        .sub-item .btn-item-delete {
            position: absolute;
            top: 4px;
            right: 10px;
        }
        .btn-item-delete {
            color: #999c9e;
        }
        .btn-item-delete:hover {
            color: #666c6e;
        }
    </style>
</head>

<body>
<div id="wrapper">

    <% include ./nav %>

    <div id="page-wrapper" class="gray-bg">
        <div class="row border-bottom">
            <nav class="navbar navbar-static-top white-bg" role="navigation" style="margin-bottom: 0">
                <div class="navbar-header navbar-top-left">
                    <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>
                </div>
                <ul class="nav navbar-top-links navbar-top-right">
                    <li>
                        <span class="m-r-sm text-muted welcome-message">Welcome to Multiscreen Management Site.</span>
                    </li>
                </ul>
            </nav>
        </div>

        <div class="wrapper wrapper-content">
            <div class="row">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="ibox">
                                <div class="ibox-title">
                                    <h5>설정된 팝업 내역</h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                    </div>
                                </div>
                                <div class="ibox-content">
                                    <table class="table" id="table-popupList"></table>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-8">
                            <div class="ibox">
                                <div class="ibox-title">
                                    <h5>팝업 설정</h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                    </div>
                                </div>
                                <div class="ibox-content">
                                    <div class="flex">
                                        <div class="flex flex-item-40 m-r-sm">
                                            <div class="flex-item-50">
                                                <div class="input-group">
                                                    <label class="form-subject" for="select-sensor">Sensor Type</label>
                                                    <select class="form-control" id="select-sensor">
                                                        <% for (const sensor of deviceList[pos].sensors) { %>
                                                            <option value="<%= sensor.id %>"><%= sensor.name %></option>
                                                        <% } %>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="flex-item-50">
                                                <div class="input-group">
                                                    <label class="form-subject" for="select-event">Sensor Type</label>
                                                    <select class="form-control" id="select-event">
                                                        <option value="IR">IR Sensor</option>
                                                        <option value="Laser">Laser Sensor</option>
                                                        <option value="IR2">IR2 Sensor</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="flex flex-item-60 m-l-sm">
                                            <div class="flex-item-50">
                                                <div class="input-group">
                                                    <label class="form-subject" for="input-name">Name</label>
                                                    <input class="form-control" id="input-name" placeholder="Input Popup Name"/>
                                                </div>
                                            </div>
                                            <div class="flex-item-50">
                                                <div class="input-group">
                                                    <label class="form-subject" for="input-url">Image Url</label>
                                                    <input class="form-control" id="input-url" placeholder="Input Image Url"/>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="flex">
                                        <div class="flex-item-20">
                                            <div class="input-group">
                                                <label class="form-subject" for="input-x">Position X</label>
                                                <input class="form-control" id="input-x" placeholder="(Default: 0)"/>
                                            </div>
                                        </div>
                                        <div class="flex-item-20">
                                            <div class="input-group">
                                                <label class="form-subject" for="input-y">Position Y</label>
                                                <input class="form-control" id="input-y" placeholder="(Default: 0)"/>
                                            </div>
                                        </div>
                                        <div class="flex-item-20">
                                            <div class="input-group">
                                                <label class="form-subject" for="input-width">Popup Width</label>
                                                <input class="form-control" id="input-width" placeholder="(Default: 1200)"/>
                                            </div>
                                        </div>
                                        <div class="flex-item-20">
                                            <div class="input-group">
                                                <label class="form-subject" for="input-height">Popup Height</label>
                                                <input class="form-control" id="input-height" placeholder="(Default: 1000)"/>
                                            </div>
                                        </div>
                                        <div class="flex-item-20">
                                            <div class="input-group">
                                                <label class="form-subject" for="input-duration">Duration (millisecond)</label>
                                                <input class="form-control" id="input-duration" placeholder="(Default: 2000ms)"/>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="arrange-right">
                                        <button type="button" class="btn btn-w-m btn-primary m-l-sm" id="btn-popup-setting">설정</button>
                                        <button type="button" class="btn btn-w-m btn-white m-r-sm" id="btn-clear">비우기</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="ibox">
                                <div class="ibox-title">
                                    <h5>단말 배치 순서</h5>
                                    <div class="ibox-tools">
                                        <a id="btn-create"><i class="fa fa-plus"></i></a>
                                        <a id="btn-delete"><i class="fa fa-trash"></i></a>
                                        <a id="btn-upload"><i class="fa fa-upload"></i></a>
                                        <a id="btn-download"><i class="fa fa-download"></i></a>
                                        <a id="btn-send"><i class="fa fa-send"></i></a>
                                        <input type="file" id="input-file" class="hidden" />
                                    </div>
                                </div>
                                <div class="ibox-content no-padding">
                                    <div class="form-list">
                                        <h5>Device List</h5>
                                        <div id="device-list">
                                            <% for (const elem of deviceList) { %>
                                                <span class="list-item" data-id="<%= elem.id %>"><%= elem.name %></span>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed-sm"></div>
                                    <div class="arrange-area"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal" id="modal-c" tabindex="-1" role="dialog"  aria-hidden="true">
            <div class="modal-dialog modal-sm">
                <div class="modal-content animated fadeIn">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                        <h3 class="modal-title">Arrange Device</h3>
                        <small class="modal-subTitle">단말을 넣을 그룹을 선택하세요.</small>
                    </div>
                    <div class="modal-body">
                        <label style="display: block; margin: 0 0 5px 0; font-size: 12px; font-weight: 200;" for="select-group">Group List</label>
                        <select class="form-control" id="select-group">
                            <option value="-1">그룹이 존재하지 않습니다.</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="btn-input">Input</button>
                        <button type="button" class="btn btn-warning" id="btn-remove">Remove</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Mainly scripts -->
<script src="/javascripts/jquery-3.1.1.min.js"></script>
<script src="/javascripts/bootstrap.js"></script>
<script src="/javascripts/jquery.metisMenu.js"></script>
<script src="/javascripts/jquery.slimscroll.min.js"></script>
<!-- Custom and plugin javascript -->
<script src="/javascripts/inspinia.js"></script>
<script src="/javascripts/pace.min.js"></script>
<!-- jQuery UI -->
<script src="/javascripts/jquery-ui.min.js"></script>
<!-- FooTable -->
<script src="/javascripts/footable-3.1.6.js"></script>
<!-- jQuery Touch Punch UI -->
<script src="/javascripts/jquery-ui-touch-punch.min.js"></script>
<script>
    $(document).ready(() => {

        let currentSettingId = null;
        let groupList = [];

        const ft = FooTable.init("#table-popupList", {
            pagination: {
                paging: true,
                size: 10,
                limit: 10
            },
            columns: [
                {name: "id", title: "", classes: "hidden"},
                {name: "sensorsId", title: "", classes: "hidden"},
                {name: "sensorName", title: "Sensor", type: "string", classes: "enable-click"},
                {name: "type", title: "Type", type: "string", classes: "enable-click"},
                {name: "name", title: "Name", classes: "enable-click"},
                {name: "url", title: "", classes: "hidden"},
                {name: "pos_x", title: "", classes: "hidden"},
                {name: "pos_y", title: "", classes: "hidden"},
                {name: "width", title: "", classes: "hidden"},
                {name: "height", title: "", classes: "hidden"},
                {name: "duration", title: "", classes: "hidden"},
            ],
            rows: $.get('/setting/popup/list')
        });

        $(document).on('click', '.table .enable-click', function(e) {
            const row = FooTable.getRow(this).value;

            currentSettingId = row.id;
            $('#select-event option').each(function(e) {
                const type = $(this).val();
                if (type === row.type) {
                    $(this).prop("selected", true);
                }
            });
            $('#select-sensor option[value="'+row.sensorsId+'"]').prop("selected", true);
            $('#input-name').val(row.name);
            $('#input-url').val(row.url);
            $('#input-x').val(row.pos_x);
            $('#input-y').val(row.pos_y);
            $('#input-width').val(row.width);
            $('#input-height').val(row.height);
            $('#input-duration').val(row.duration);
        });

        $('#btn-clear').on('click', function(e) {
            clearSettingInfo();
        });

        $('#btn-popup-setting').on('click', function(e) {
            const option = {
                id: currentSettingId,
                sensorsId: $('#select-sensor').val(),
                type: $('#select-event').val(),
                name: $('#input-name').val(),
                url: $('#input-url').val(),
                pos_x: $('#input-x').val(),
                pos_y: $('#input-y').val(),
                width: $('#input-width').val(),
                height: $('#input-height').val(),
                duration: $('#input-duration').val(),
            };

            if (blankCheck(option.pos_x)) option.pos_x = 0;
            if (blankCheck(option.pos_y)) option.pos_y = 0;
            if (blankCheck(option.width)) option.width = 1200;
            if (blankCheck(option.height)) option.height = 1000;
            if (blankCheck(option.duration)) option.duration = 2000;
            if (blankCheck(option.name)) {
                alert("Setting Name을 입력해주세요.");
            } else if (blankCheck(option.url)) {
                alert("Popup Url을 입력해주세요.");
            } else {
                if (option.id === null) {
                    $.ajax({
                        type: "POST",
                        url: "/setting/popup/add",
                        data: "option="+JSON.stringify(option),
                        success: function(result) {
                            if (result.result) {
                                $.get('/setting/popup/list', function(list) {
                                    ft.rows.load(list);
                                });
                                clearSettingInfo();
                                alert("Setting 추가 완료");
                            } else {
                                alert(result.message);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "POST",
                        url: "/setting/popup/update",
                        data: "option="+JSON.stringify(option),
                        success: function(result) {
                            if (result.result) {
                                $.get('/setting/popup/list', function(list) {
                                    ft.rows.load(list);
                                });
                                clearSettingInfo();
                                alert("Setting 업데이트 완료");
                            } else {
                                alert(result.message);
                            }
                        }
                    });
                }
            }
        });

        function clearSettingInfo() {
            currentSettingId = null;
            $('#select-sensor option:eq(0)').prop('selected', true);
            $('#select-event option:eq(0)').prop('selected', true);
            $('#input-name').val("");
            $('#input-url').val("");
            $('#input-x').val("");
            $('#input-y').val("");
            $('#input-width').val("");
            $('#input-height').val("");
            $('#input-duration').val("");
        }

        // Select Device
        $('#select-device').on("change", function(e) {
            const deviceId = $(this).val();

            $.ajax({
                type: "POST",
                url: "/sensor/list",
                data: "deviceId="+deviceId,
                success: function(result) {
                    if (result.result && result.sensorList.length > 0) {
                        $('#select-sensor').empty();
                        for (const sensor of result.sensorList) {
                            $('#select-sensor').append('<option value="'+sensor.id+'">'+sensor.name+'</option>');
                        }
                    } else {
                        alert("Select Sensor Error!");
                    }
                }
            });

            $.ajax({
                type: "POST",
                url: "/choice/device",
                data: "type=setting&id="+deviceId,
                success: function(result) {
                    if (result) {
                        ft.rows.load(result.list);
                    } else {
                        alert(result.message);
                    }
                }
            });
        });

        // 단말 배치 순서 - 단말 목록에서 단말을 선택하는 이벤트
        let curSelectDevice = {};
        $('#device-list .list-item').on('click', function(e) {
            curSelectDevice = {
                id: $(this).data('id'),
                name: $(this).text()
            };

            $('#select-group option:eq(0)').prop('selected', true);
            if (groupList.length > 0) {
                $('#modal-c .modal-title').text("Arrange Device");
                $('#modal-c .modal-subTitle').text("단말을 넣을 그룹을 선택하세요.");
                $('#modal-c #btn-input').removeClass("hidden");
                $('#modal-c #btn-remove').addClass("hidden");
                $('#modal-c').modal("show");
            } else {
                alert("단말이 속할 그룹을 먼저 생성하세요.");
            }
        });

        // 그룹 생성
        let rowIndex = 0;
        $('#btn-create').on('click', function(e) {
            $('.arrange-area').append('<div class="form-group m-b-md"><h5 class="no-margins">Group '+(rowIndex + 1)+'</h5><div class="arrange-row" data-id='+rowIndex+'></div></div>');

            groupList.push({name: "Group"+(rowIndex + 1), items: []});
            if (groupList.length === 1) {
                $('#select-group').empty();
            }
            $('#select-group').append('<option value='+rowIndex+'>'+groupList[rowIndex].name+'</option>');

            rowIndex++;
        });

        // 그룹에 단말을 추가
        $('#modal-c #btn-input').on('click', function(e) {
            const value = $('#select-group').val();

            const items = groupList[value].items;
            // 중복 체크
            const isExist = items.some(function(elem) {
                if (elem.name === curSelectDevice.name) return true;
            });
            if (isExist) {
                alert("선택한 그룹에 동일한 단말이 존재합니다.");
            } else {
                groupList[value].items.push({id: curSelectDevice.id, name: curSelectDevice.name});

                $('.arrange-row[data-id='+value+']').append(
                    '<div class="sub-item" data-id="'+curSelectDevice.id+'">' +
                    '<a class="btn-item-delete" data-id="'+curSelectDevice.id+'"><i class="fa fa-times"></i></a>' +
                    '<div style="padding: 0 10px;">' +
                    '<div class="form-draggable" data-id="'+curSelectDevice.id+'">' +
                    '<h5 class="device-name">'+curSelectDevice.name+'</h5>' +
                    '<div class="input-group">' +
                    '<button data-toggle="dropdown" class="btn btn-white btn-sm dropdown-toggle" type="button" id="mapping-sensor">Sensor1</button>' +
                    '<ul class="dropdown-menu">' +
                    '<li><a>Sensor1</a></li>' +
                    '<li><a>Sensor2</a></li>' +
                    '<li><a>Sensor3</a></li>' +
                    '<li><a>Sensor4</a></li>' +
                    '</ul>' +
                    '</div>\n' +
                    '<div class="input-group">\n' +
                    '<button data-toggle="dropdown" class="btn btn-white btn-sm dropdown-toggle" type="button" id="mapping-type">IR</button>' +
                    '<ul class="dropdown-menu">' +
                    '<li><a>IR</a></li>' +
                    '<li><a>IR2:0ch</a></li>' +
                    '<li><a>IR2:1ch</a></li>' +
                    '<li><a>IR2:2ch</a></li>' +
                    '<li><a>IR2:3ch</a></li>' +
                    '</ul>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '<div>'
                );

                $('#modal-c').modal('hide');
            }

            // Div 를 움직일 수 있게 됨
            WinMove();
        });

        // 그룹 삭제 Modal 열기
        $('#btn-delete').on('click', function(e) {
            $('#select-group option:eq(0)').prop('selected', true);
            if (groupList.length > 0) {
                $('#modal-c .modal-title').text("Delete Group");
                $('#modal-c .modal-subTitle').text("삭제할 그룹을 선택하세요.");
                $('#modal-c #btn-input').addClass("hidden");
                $('#modal-c #btn-remove').removeClass("hidden");
                $('#modal-c').modal("show");
            } else {
                alert("단말이 속할 그룹을 먼저 생성하세요.");
            }
        });

        // 그룹 삭제
        $('#modal-c #btn-remove').on('click', function(e) {
            const index = $('#select-group').val();
            $('.arrange-row[data-id='+index+']').parent().remove();
            groupList.splice(index, 1);

            $('#select-group option[value='+index+']').remove();

            $('#modal-c').modal("hide");
        });

        // 배치한 단말 삭제
        $(document).on('click', '.btn-item-delete', function() {
            const id = $(this).data('id');
            const item = $(this).parent();
            const rowIndex = item.parent().data('id');
            // Row 에서 Item 삭제
            item.remove();
            // GroupList 배열에 저장된 정보 삭제
            let idx = null;
            groupList[rowIndex].items.some(function(elem, index) {
                if (elem.id === id) {
                    idx = index;
                }
            });

            if (idx !== null) {
                groupList[rowIndex].items.splice(idx);
            }
        });

        // 단말의 센서와 센서 Type 설정
        $(document).on('click', '.dropdown-menu li > a', function(e) {
            const value = $(this).text();
            const form = $(this).parent().parent().parent();
            form.find('.dropdown-toggle').text(value);
        });

        // 단말의 배치 및 설정을 이벤트 서버로 전송
        $('#btn-send').on('click', function(e) {
            const setting = createArrangeObject();
            $.ajax({
                type: "POST",
                url: "http://192.168.0.14:9000/setting/arrange/device",
                data: "setting="+JSON.stringify(setting),
                // success: function(result) {
                //     alert(result);
                // }
            });
        });

        // Download
        $('#btn-download').on('click', function(e) {
            const setting = createArrangeObject();
            const objString = JSON.stringify(setting);
            download("arrangeSetting.json", objString);
        });

        // Upload
        $('#btn-upload').on('click', function(e) {
            $('#input-file').click();
        });

        // Upload
        $('#input-file').on('change', function(e) {
            const file = $('#input-file')[0].files[0];
            const reader = new FileReader();
            reader.onload = function(event) {
                const data = JSON.parse(event.target.result);

                if (data.arrange === undefined || data.mapping === undefined) {
                    alert("잘못된 형식입니다.");
                } else {
                    groupList = [];
                    let index = 0;
                    $('.arrange-area').empty();
                    for (const group of data.arrange) {
                        const gn = "Group"+(index + 1);
                        groupList.push({name: gn, items: []});
                        $('.arrange-area').append('<div class="form-group m-b-md"><h5 class="no-margins">Group '+(index + 1)+'</h5><div class="arrange-row" data-id='+index+'></div></div>');
                        for (const device of group) {
                            groupList[index].items.push(device);
                            createItem(index, data.mapping[device]);
                        }
                        index++;
                    }

                    $('#select-group').empty();
                    index = 0;
                    for (const group of groupList) {
                        $('#select-group').append('<option value='+index+'>'+group.name+'</option>');
                        index++;
                    }
                }
            }
            reader.readAsText(file);
        });

    });

    function createItem(index, option) {
        $('.arrange-row[data-id='+index+']').append(
            '<div class="sub-item" data-id="'+option.id+'">' +
            '<a class="btn-item-delete" data-id="'+option.id+'"><i class="fa fa-times"></i></a>' +
            '<div style="padding: 0 10px;">' +
            '<div class="form-draggable" data-id="'+option.id+'">' +
            '<h5 class="device-name">'+option.name+'</h5>' +
            '<div class="input-group">' +
            '<button data-toggle="dropdown" class="btn btn-white btn-sm dropdown-toggle" type="button" id="mapping-sensor">'+option.sensor+'</button>' +
            '<ul class="dropdown-menu">' +
            '<li><a>Sensor1</a></li>' +
            '<li><a>Sensor2</a></li>' +
            '<li><a>Sensor3</a></li>' +
            '<li><a>Sensor4</a></li>' +
            '</ul>' +
            '</div>\n' +
            '<div class="input-group">\n' +
            '<button data-toggle="dropdown" class="btn btn-white btn-sm dropdown-toggle" type="button" id="mapping-type">'+(option.type === "IR2" ? (option.type+':'+option.channel) : option.type)+'</button>' +
            '<ul class="dropdown-menu">' +
            '<li><a>IR</a></li>' +
            '<li><a>IR2:0ch</a></li>' +
            '<li><a>IR2:1ch</a></li>' +
            '<li><a>IR2:2ch</a></li>' +
            '<li><a>IR2:3ch</a></li>' +
            '</ul>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '<div>'
        );
    }

    // 파일 다운로드
    function download(filename, text) {
        const element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);
    }

    // 배치 설정 저장 객체 생성
    function createArrangeObject() {
        const setting = {
            arrange: [],
            mapping: {}
        }

        // 각 그룹별 단말 배치를 객체에 저장
        $('.arrange-area .arrange-row').each(function() {
            const row = [];
            $(this).find('.sub-item').each(function() {
                const id = $(this).data('id');
                const name = $(this).find('.device-name').text();

                row.push(name);                                                                             // 그룹별 단말 배치를 저장

                const sensor = $(this).find('#mapping-sensor').text();
                let type = $(this).find('#mapping-type').text();
                let channel = "0ch";
                if (type !== "IR") {
                    const split = type.split(':');
                    type = split[0];
                    channel = split[1];
                }

                setting.mapping[name] = {
                    id: id,
                    name: name,
                    sensor: sensor,
                    type: type,
                    channel: channel,
                }
            });

            if (row.length > 0) {
                setting.arrange.push(row);                                                                  // 각 그룹별 배치를 저장
            }
        });

        return setting;
    }

    function blankCheck(value) {
        if (value === "" || value === null) {
            return true;
        }
        const blankPattern = /^\s+|\s+$/g;
        return value.replace(blankPattern, "") === "";
    }
</script>
</body>
</html>
